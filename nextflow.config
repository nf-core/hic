/*
 * -------------------------------------------------
 *  nf-core/hic Nextflow config file
 * -------------------------------------------------
 * Default config options for all environments.
 */

// Global default params, used in configs
params {

  // Inputs / outputs
  genome = false
  input = "data/*{1,2}.fastq.gz"
  outdir = './results'
  publish_dir_mode = 'copy'
  genome = false
  input_paths = false
  chromosome_size = false
  restriction_fragments = false
  save_reference = false
 
  // Digestion Hi-C
  digestion = false
  digest {
    'hindiii'{
       restriction_site='A^AGCTT'
       ligation_site='AAGCTAGCTT'
    }
    'mboi' {
       restriction_site='^GATC'
       ligation_site='GATCGATC'
    }
    'dpnii' {
       restriction_site='^GATC'
       ligation_site='GATCGATC'
    }
    'arima' {
       restriction_site='^GATC,G^ANT'
       ligation_site='GATCGATC,GATCGANT,GANTGATC,GANTGANT'
    }
  }
  min_restriction_fragment_size = 0
  max_restriction_fragment_size = 0
  min_insert_size = 0
  max_insert_size = 0

  // Dnase Hi-C
  dnase = false
  min_cis_dist = 0

  // Mapping
  split_fastq = false
  fastq_chunks_size = 20000000
  save_interaction_bam = false
  save_aligned_intermediates = false
  bwt2_opts_end2end = '--very-sensitive -L 30 --score-min L,-0.6,-0.2 --end-to-end --reorder'
  bwt2_opts_trimmed = '--very-sensitive -L 20 --score-min L,-0.6,-0.2 --end-to-end --reorder'
  keep_dups = false
  keep_multi = false
  min_mapq = 10

  // Contact maps
  bin_size = '1000000,500000'
  ice_max_iter = 100
  ice_filer_low_count_perc = 0.02
  ice_filer_high_count_perc =  0
  ice_eps = 0.1

  // Workflow
  skip_maps = false
  skip_ice = false
  skip_cool = false
  skip_multiqc = false
  
  // Boilerplate options
  name = false
  multiqc_config = false
  email = false
  email_on_fail = false
  max_multiqc_email_size = 25.MB
  plaintext_email = false
  monochrome_logs = false
  help = false
  igenomes_base = 's3://ngi-igenomes/igenomes/'
  tracedir = "${params.outdir}/pipeline_info"
  igenomes_ignore = false
  custom_config_version = 'master'
  custom_config_base = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
  hostnames = false
  config_profile_description = false
  config_profile_contact = false
  config_profile_url = false

  // Defaults only, expecting to be overwritten
  max_memory = 128.GB
  max_cpus = 16
  max_time = 240.h

}

// Container slug. Stable releases should specify release tag!
// Developmental code should specify :dev
process.container = 'nfcore/hic:dev'

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

// Load nf-core custom profiles from different Institutions
try {
  includeConfig "${params.custom_config_base}/nfcore_custom.config"
} catch (Exception e) {
  System.err.println("WARNING: Could not load nf-core/config profiles: ${params.custom_config_base}/nfcore_custom.config")
}

profiles {
  conda { process.conda = "$projectDir/environment.yml" }
  debug { process.beforeScript = 'echo $HOSTNAME' }
  docker {
    docker.enabled = true
    // Avoid this error:
    //   WARNING: Your kernel does not support swap limit capabilities or the cgroup is not mounted. Memory limited without swap.
    // Testing this in nf-core after discussion here https://github.com/nf-core/tools/pull/351
    // once this is established and works well, nextflow might implement this behavior as new default.
    docker.runOptions = '-u \$(id -u):\$(id -g)'
  }
  singularity {
    singularity.enabled = true
    singularity.autoMounts = true
  }
  podman {
    podman.enabled = true
  }
  test { includeConfig 'conf/test.config' }
  test_full { includeConfig 'conf/test_full.config' }
}

// Load igenomes.config if required
if (!params.igenomes_ignore) {
  includeConfig 'conf/igenomes.config'
}

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
env {
  PYTHONNOUSERSITE = 1
  R_PROFILE_USER = "/.Rprofile"
  R_ENVIRON_USER = "/.Renviron"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

timeline {
  enabled = true
  file = "${params.tracedir}/execution_timeline.html"
}
report {
  enabled = true
  file = "${params.tracedir}/execution_report.html"
}
trace {
  enabled = true
  file = "${params.tracedir}/execution_trace.txt"
}
dag {
  enabled = true
  file = "${params.tracedir}/pipeline_dag.svg"
}

manifest {
  name = 'nf-core/hic'
  author = 'Nicolas Servant'
  homePage = 'https://github.com/nf-core/hic'
  description = 'Analysis of Chromosome Conformation Capture data (Hi-C)'
  mainScript = 'main.nf'
  nextflowVersion = '>=20.04.0'
  version = '1.3.0dev'
}

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
  if (type == 'memory') {
    try {
      if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
        return params.max_memory as nextflow.util.MemoryUnit
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
      return obj
    }
  } else if (type == 'time') {
    try {
      if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
        return params.max_time as nextflow.util.Duration
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
      return obj
    }
  } else if (type == 'cpus') {
    try {
      return Math.min( obj, params.max_cpus as int )
    } catch (all) {
      println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
      return obj
    }
  }
}
